@page "/servers/{id:int}"

@inject NavigationManager NavigationManager

<h3>EditServer</h3>

<br />
<br />

@if (server != null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
        @* validation을 발동시키기 위해 아래 태그 필요 *@
        <DataAnnotationsValidator></DataAnnotationsValidator>
        @* ValidationMessage도 사용가능 *@
        <ValidationSummary></ValidationSummary>

        <InputNumber @bind-Value="server.ServerId" hidden></InputNumber>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.Name" class="form-control"></InputText>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.City" class="form-control"></InputText>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>

            </div>
        </div>
        <br/>
        <button class="btn btn-primary" type="submit">Update</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Close</a>
    </EditForm>
}

<br />


@code {
    
    // 파라매터 매칭되도록 처리. (case 상관없음. 데코레이터 붙으면 자동 매치) 
    [Parameter]
    public int Id { get; set; }

    // 여러 폼이 있으면 어떻게해?  (파라매터로 전달 
    [SupplyParameterFromForm(FormName = "formServer")]
    private Server? server { get; set; }
    
    protected override void OnParametersSet()
    {
        // base.OnParametersSet();
        // 파라매터가 갱신됨 보장한다. 
        server ??= ServersRepository.GetServerById(this.Id);
    }

    // protected override Task OnParametersSetAsync()
    // {
    //     return base.OnParametersSetAsync();
    // }

    public void Submit()
    {
        if (server != null)
        {
            ServersRepository.UpdateServer(server.ServerId, server);
        }
        
        NavigationManager.NavigateTo("/servers");
    }
        
}
